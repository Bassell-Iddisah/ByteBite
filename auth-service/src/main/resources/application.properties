spring.application.name=auth-service
server.port=8081

# === Eureka ===
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}

# === Config Server ===
spring.cloud.config.uri=http://localhost:8888
spring.config.import=optional:configserver:http://localhost:8888

# === JPA/H2 ===
spring.datasource.url=jdbc:h2:mem:authdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# === Show SQL ===
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# === OAuth2 ===
spring.security.oauth2.client.registration.google.client-id=1026281076243-ets8voq7hgmmkalanh30ojjqvtcfo10k.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile

# Optional: redirect to custom controller after login
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8081/login/oauth2/code/{registrationId}
